// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "com/ezored/repository/EZRRepositoryTodoRepository.hpp" // my header
#include "com/ezored/domain/EZRDomainTodo.hpp"
#include "djinni/jni/Marshal.hpp"

namespace djinni_generated
{

EZRRepositoryTodoRepository::EZRRepositoryTodoRepository() : ::djinni::JniInterface<::ezored::repository::TodoRepository, EZRRepositoryTodoRepository>("com/ezored/repository/TodoRepository$CppProxy") {}

EZRRepositoryTodoRepository::~EZRRepositoryTodoRepository() = default;

CJNIEXPORT void JNICALL Java_com_ezored_repository_TodoRepository_00024CppProxy_nativeDestroy(JNIEnv *jniEnv, jobject /*this*/, jlong nativeRef)
{
    try
    {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ezored::repository::TodoRepository> *>(nativeRef);
    }
    JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_ezored_repository_TodoRepository_00024CppProxy_truncate(JNIEnv *jniEnv, jobject /*this*/)
{
    try
    {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        ::ezored::repository::TodoRepository::truncate();
    }
    JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT ::djinni_generated::EZRDomainTodo::JniType JNICALL Java_com_ezored_repository_TodoRepository_00024CppProxy_findById(JNIEnv *jniEnv, jobject /*this*/, jlong j_id)
{
    try
    {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::repository::TodoRepository::findById(::djinni::I64::toCpp(jniEnv, j_id));
        return ::djinni::release(::djinni_generated::EZRDomainTodo::fromCpp(jniEnv, r));
    }
    JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_ezored_repository_TodoRepository_00024CppProxy_findAllOrderByCreatedAtDesc(JNIEnv *jniEnv, jobject /*this*/)
{
    try
    {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::repository::TodoRepository::findAllOrderByCreatedAtDesc();
        return ::djinni::release(::djinni::List<::djinni_generated::EZRDomainTodo>::fromCpp(jniEnv, r));
    }
    JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_ezored_repository_TodoRepository_00024CppProxy_findByTitle(JNIEnv *jniEnv, jobject /*this*/, jstring j_title)
{
    try
    {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::repository::TodoRepository::findByTitle(::djinni::String::toCpp(jniEnv, j_title));
        return ::djinni::release(::djinni::List<::djinni_generated::EZRDomainTodo>::fromCpp(jniEnv, r));
    }
    JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_com_ezored_repository_TodoRepository_00024CppProxy_removeById(JNIEnv *jniEnv, jobject /*this*/, jlong j_id)
{
    try
    {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::repository::TodoRepository::removeById(::djinni::I64::toCpp(jniEnv, j_id));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    }
    JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_ezored_repository_TodoRepository_00024CppProxy_update(JNIEnv *jniEnv, jobject /*this*/, jlong j_id, ::djinni_generated::EZRDomainTodo::JniType j_todo)
{
    try
    {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::repository::TodoRepository::update(::djinni::I64::toCpp(jniEnv, j_id),
                                                              ::djinni_generated::EZRDomainTodo::toCpp(jniEnv, j_todo));
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    }
    JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_ezored_repository_TodoRepository_00024CppProxy_insert(JNIEnv *jniEnv, jobject /*this*/, ::djinni_generated::EZRDomainTodo::JniType j_todo)
{
    try
    {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::repository::TodoRepository::insert(::djinni_generated::EZRDomainTodo::toCpp(jniEnv, j_todo));
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    }
    JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_ezored_repository_TodoRepository_00024CppProxy_add(JNIEnv *jniEnv, jobject /*this*/, ::djinni_generated::EZRDomainTodo::JniType j_todo)
{
    try
    {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::repository::TodoRepository::add(::djinni_generated::EZRDomainTodo::toCpp(jniEnv, j_todo));
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    }
    JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_com_ezored_repository_TodoRepository_00024CppProxy_setDoneById(JNIEnv *jniEnv, jobject /*this*/, jlong j_id, jboolean j_done)
{
    try
    {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::repository::TodoRepository::setDoneById(::djinni::I64::toCpp(jniEnv, j_id),
                                                                   ::djinni::Bool::toCpp(jniEnv, j_done));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    }
    JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_ezored_repository_TodoRepository_00024CppProxy_count(JNIEnv *jniEnv, jobject /*this*/)
{
    try
    {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::repository::TodoRepository::count();
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    }
    JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

} // namespace djinni_generated

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#pragma once

#include "djinni/jni/djinni_support.hpp"
#include "ezored/net/http/HttpRequest.hpp"

namespace djinni_generated
{

class EZRHttpRequest final
{
public:
    using CppType = ::ezored::net::http::HttpRequest;
    using JniType = jobject;

    using Boxed = EZRHttpRequest;

    ~EZRHttpRequest();

    static CppType toCpp(JNIEnv *jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv *jniEnv, const CppType &c);

private:
    EZRHttpRequest();
    friend ::djinni::JniClass<EZRHttpRequest>;

    const ::djinni::GlobalRef<jclass> clazz{::djinni::jniFindClass("com/ezored/net/http/HttpRequest")};
    const jmethodID jconstructor{::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Lcom/ezored/net/http/HttpMethod;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/lang/String;)V")};
    const jfieldID field_mUrl{::djinni::jniGetFieldID(clazz.get(), "mUrl", "Ljava/lang/String;")};
    const jfieldID field_mMethod{::djinni::jniGetFieldID(clazz.get(), "mMethod", "Lcom/ezored/net/http/HttpMethod;")};
    const jfieldID field_mParams{::djinni::jniGetFieldID(clazz.get(), "mParams", "Ljava/util/ArrayList;")};
    const jfieldID field_mHeaders{::djinni::jniGetFieldID(clazz.get(), "mHeaders", "Ljava/util/ArrayList;")};
    const jfieldID field_mBody{::djinni::jniGetFieldID(clazz.get(), "mBody", "Ljava/lang/String;")};
};

} // namespace djinni_generated

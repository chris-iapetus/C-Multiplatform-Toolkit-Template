// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

package com.ezored.net.http;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class HttpClientLogger {
    public abstract void onRequest(HttpRequest request);

    public abstract void onResponse(HttpRequest request, HttpResponse response);

    private static final class CppProxy extends HttpClientLogger
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void _djinni_private_destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        @SuppressWarnings("deprecation")
        protected void finalize() throws java.lang.Throwable
        {
            _djinni_private_destroy();
            super.finalize();
        }

        @Override
        public void onRequest(HttpRequest request)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onRequest(this.nativeRef, request);
        }
        private native void native_onRequest(long _nativeRef, HttpRequest request);

        @Override
        public void onResponse(HttpRequest request, HttpResponse response)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onResponse(this.nativeRef, request, response);
        }
        private native void native_onResponse(long _nativeRef, HttpRequest request, HttpResponse response);
    }
}

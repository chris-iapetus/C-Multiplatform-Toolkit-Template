// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "com/ezored/helper/EZRHelperEnvironmentHelper.hpp" // my header
#include "djinni/jni/Marshal.hpp"

namespace djinni_generated
{

EZRHelperEnvironmentHelper::EZRHelperEnvironmentHelper() : ::djinni::JniInterface<::ezored::helper::EnvironmentHelper, EZRHelperEnvironmentHelper>("com/ezored/helper/EnvironmentHelper$CppProxy") {}

EZRHelperEnvironmentHelper::~EZRHelperEnvironmentHelper() = default;

CJNIEXPORT void JNICALL Java_com_ezored_helper_EnvironmentHelper_00024CppProxy_nativeDestroy(JNIEnv *jniEnv, jobject /*this*/, jlong nativeRef)
{
    try
    {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ezored::helper::EnvironmentHelper> *>(nativeRef);
    }
    JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jstring JNICALL Java_com_ezored_helper_EnvironmentHelper_00024CppProxy_getSecretKey(JNIEnv *jniEnv, jobject /*this*/)
{
    try
    {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::helper::EnvironmentHelper::getSecretKey();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    }
    JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

} // namespace djinni_generated

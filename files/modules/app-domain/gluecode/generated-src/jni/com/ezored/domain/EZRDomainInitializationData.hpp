// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#pragma once

#include "djinni/jni/djinni_support.hpp"
#include "ezored/domain/InitializationData.hpp"

namespace djinni_generated
{

class EZRDomainInitializationData final
{
public:
    using CppType = ::ezored::domain::InitializationData;
    using JniType = jobject;

    using Boxed = EZRDomainInitializationData;

    ~EZRDomainInitializationData();

    static CppType toCpp(JNIEnv *jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv *jniEnv, const CppType &c);

private:
    EZRDomainInitializationData();
    friend ::djinni::JniClass<EZRDomainInitializationData>;

    const ::djinni::GlobalRef<jclass> clazz{::djinni::jniFindClass("com/ezored/domain/InitializationData")};
    const jmethodID jconstructor{::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)V")};
    const jfieldID field_mAppId{::djinni::jniGetFieldID(clazz.get(), "mAppId", "Ljava/lang/String;")};
    const jfieldID field_mName{::djinni::jniGetFieldID(clazz.get(), "mName", "Ljava/lang/String;")};
    const jfieldID field_mBasePath{::djinni::jniGetFieldID(clazz.get(), "mBasePath", "Ljava/lang/String;")};
    const jfieldID field_mDatabaseMigrationMaxVersion{::djinni::jniGetFieldID(clazz.get(), "mDatabaseMigrationMaxVersion", "I")};
    const jfieldID field_mDebug{::djinni::jniGetFieldID(clazz.get(), "mDebug", "Z")};
};

} // namespace djinni_generated
